

services:
  db:
    image: mariadb:10.11
    restart: unless-stopped
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-supersecretroot}
      MYSQL_DATABASE: ${DB_NAME:-projects}
      MYSQL_USER: ${DB_USER:-ronaldo}
      MYSQL_PASSWORD: ${DB_PASSWORD:-ronaldo100}
    ports:
      - "3307:3306"
    healthcheck:
      # use root credentials so ping succeeds reliably
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    restart: unless-stopped
    # DEV: runserver is OK short-term; for prod, switch to Gunicorn (see comment)
    command: >
      sh -c "
        python -m pip show python-dotenv >/dev/null 2>&1 || echo 'python-dotenv missing!';
        python -m pip show pymysql >/dev/null 2>&1 || echo 'pymysql missing!';
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    # PROD (swap the command above with this):
    # command: >
    #   sh -c "
    #     python manage.py migrate --noinput &&
    #     python manage.py collectstatic --noinput &&
    #     gunicorn project_manager.wsgi:application --bind 0.0.0.0:8000 --workers 3
    #   "
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  mariadb_data:
